STDOUT.sync = true
STDERR.sync = true

BATCH_SIZE = 8

require 'bundler'
Bundler.setup

require 'smqueue'
require 'aql_sms_api'
require 'yajl/json_gem'

puts "Setting credentials"
AQL::SMS.authenticate :username => ARGV[0], :password => ARGV[1]
puts "Connecting to broker host: #{ARGV[2]}, name: #{ARGV[3]}"
notification = SMQueue(:configuration => {
  :host => ARGV[2],
  :name => ARGV[3],
  :client_id => File.basename($0) + '-' + Process.pid.to_s,
  :adapter => :StompAdapter
})
puts "Staring loop"
notification.get do |message|
  json = JSON.parse message.body
  message = json['message']
  destination_numbers = json['destination_numbers']
  batches = (destination_numbers.size.to_f / BATCH_SIZE).ceil
  batch = 1
  while destination_numbers.any?
    send_to = []
    BATCH_SIZE.times { send_to << destination_numbers.pop }
    send_to.compact!
    send_to.uniq!
    puts "[#{batch}/#{batches}] Sending \"#{json['message']}\" to #{send_to.join(', ')}"
    response = AQL::SMS.send_message send_to, message
    response_details = [ response.code, response.credits, response.message ]
    puts "[#{batch}/#{batches}] Response: %s: %s \"%s\"" % response_details
    batch += 1
  end
  puts "Message sent to #{destination_numbers} in #{batches} batches of #{BATCH_SIZE}"
end
puts "Exiting :("
